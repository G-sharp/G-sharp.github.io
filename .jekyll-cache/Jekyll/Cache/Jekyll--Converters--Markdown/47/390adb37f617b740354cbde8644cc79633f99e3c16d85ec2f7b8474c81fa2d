I"D<p>1、包命名约定
包名必须是一组全部小写字母的单词（例如com，org，net等）；如果名称包含多个单词，则应使用点（.）分隔（例如java.util，java.lang）。根据组织自己的内部命名约定，包名称的后续部分可能不同。例：
package com.howtodoinjava.webapp.controller;
package com.company.myapplication.web.controller;
package com.google.search.common;
<strong>**</strong><strong>**</strong><strong>**</strong><strong>**</strong><strong>**</strong><strong>**</strong><strong>**</strong><strong>**</strong><strong>**</strong><strong>**</strong><strong>**</strong><strong>**</strong><strong>**</strong><strong>**</strong>
2、类命名约定
在Java中，类名通常应该是以大写字母开头的一个名词（例：Color，Button，System，Thread，etc），需要使用适当的单词，而不是缩写词。例如：
public class ArrayList {}
public class Employee {}
public class Record {}
public class Identity {}
<strong>**</strong><strong>**</strong><strong>**</strong><strong>**</strong><strong>**</strong><strong>**</strong><strong>**</strong><strong>**</strong><strong>**</strong><strong>**</strong><strong>**</strong><strong>**</strong><strong>**</strong><strong>**</strong>
3、接口命名约定
在Java中，接口名称通常应该是以大写字母开头的形容词（如：Runnable，Remote，ActionListener）；在相同的情况下，接口也可以是名词，当它们呈现一系列类别时，例如List和Map。
public interface Serializable {}
public interface Clonable {}
public interface Iterable {}
public interface List {}
<strong>**</strong><strong>**</strong><strong>**</strong><strong>**</strong><strong>**</strong><strong>**</strong><strong>**</strong><strong>**</strong><strong>**</strong><strong>**</strong><strong>**</strong><strong>**</strong><strong>**</strong><strong>**</strong>
4、方法命名约定
方法通常应该是小写字母开头的一个动词，如main()， print()， println()；如果名称包含多个单词，需要按采用驼峰大小写表示法，使用小写字母后跟大写字母，如actionPerformed()。
public Long getId() {}
public void remove(Object o) {}
public Object update(Object o) {}
public Report getReportById(Long id) {}
public Report getReportByName(String name) {}
<strong>**</strong><strong>**</strong><strong>**</strong><strong>**</strong><strong>**</strong><strong>**</strong><strong>**</strong><strong>**</strong><strong>**</strong><strong>**</strong><strong>**</strong><strong>**</strong><strong>**</strong><strong>**</strong>
5、变量命名约定
静态和方法参数变量名称应该是小写字母开头；如果名称包含多个单词，需要采用驼峰大小写表示法，使用小写字母后跟大写字母的方法。如果是临时变量，可以是单个字符，如x，y，z。
public Long id;
public EmployeeDao employeeDao;
private Properties properties;
for (int i = 0; i &lt; list.size(); i++) {
}
<strong>**</strong><strong>**</strong><strong>**</strong><strong>**</strong><strong>**</strong><strong>**</strong><strong>**</strong><strong>**</strong><strong>**</strong><strong>**</strong><strong>**</strong><strong>**</strong><strong>**</strong><strong>**</strong>
6、常量命名约定
Java常量应该都是大写字母，如果名称包含多个单词，则应使用下划线（_）分隔，例如：MAX_PRIORITY。确保使用带有常量变量的final修饰符，可以包含数字，但不能是开头的字母。
public final String SECURITY_TOKEN = “…”;
public final int INITIAL_SIZE = 16;
public final Integer MAX_SIZE = Integer.MAX;
注：为了便于调试，应避免使用ANSI常量。
<strong>**</strong><strong>**</strong><strong>**</strong><strong>**</strong><strong>**</strong><strong>**</strong><strong>**</strong><strong>**</strong><strong>**</strong><strong>**</strong><strong>**</strong><strong>**</strong><strong>**</strong><strong>**</strong>
7、通用类型命名约定
通用类型参数名称应为大写单个字母。通常建议使用’T’类型字母。在JDK类中，E用于集合元素，S用于服务加载器，K和V用于映射键和值。
public interface Map &lt;K,V&gt; {}
public interface List<E> extends Collection<E> {}
Iterator<E> iterator() {}
************************************************************************************
8、枚举命名约定
与类名相似，枚举名称应全部为大写字母。
enum Direction {NORTH, EAST, SOUTH, WEST}
************************************************************************************
9、注释命名约定
注释名称遵循标题案例表示法。它们可以是基于要求的形容词，动词或名词。
public @interface FunctionalInterface {}
public @interface Deprecated {}
public@interface Documented {}
public @Asyn Documented {}
public @Test Documented {}
************************************************************************************
总结：在任何编程语言中编写干净代码，命名约定都是非常重要的，标准Java命名约定使代码更易读和可维护。
************************************************************************************</E></E></E></p>
:ET